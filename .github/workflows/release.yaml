name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run chart-releaser
        id: chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.2
        if: ${{ steps.chart-releaser.outputs.changed_charts }}
      - id: github-repo-owner-name
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository_owner }}
      - name: Upload charts to OCI registries
        id: upload
        if: ${{ steps.chart-releaser.outputs.changed_charts }}
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
        run: |
          CHANGED_CHARTS="${{ steps.chart-releaser.outputs.changed_charts }}"

          # Login to GHCR
          helm registry login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} https://ghcr.io

          RELEASED_CHARTS=""
          for chart_directory in ${CHANGED_CHARTS//,/ }; do
            CHART_NAME=${chart_directory#charts/}

            cd $chart_directory

            # Extract version and appVersion from Chart.yaml
            CHART_VERSION=$(yq eval '.version' "Chart.yaml")
            APP_VERSION=$(yq eval '.appVersion' "Chart.yaml")

            # Push to GHCR
            echo ${{ steps.github-repo-owner-name.outputs.lowercase }}
            echo "Pushing Helm chart $CHART_NAME-$CHART_VERSION.tgz to oci://ghcr.io/${{ github.repository_owner.lowercase }}/helm-charts"
            if helm push ${{ github.workspace }}/.cr-release-packages/${CHART_NAME}-${CHART_VERSION}.tgz oci://ghcr.io/${{ github.repository_owner }}/helm-charts 2>&1 | tee ${CHART_NAME}-ghcr-output.log; then

              # Extract digest and sign GHCR chart
              GHCR_DIGEST=$(cat ${CHART_NAME}-ghcr-output.log | awk -F '[, ]+' '/Digest/{print $NF}')
              cosign sign -y --key env://COSIGN_KEY ghcr.io/${{ github.repository_owner }}/helm-charts/${CHART_NAME}:${CHART_VERSION}@$GHCR_DIGEST

              echo "Successfully released $CHART_NAME-$CHART_VERSION to GHCR"
            else
              echo "Failed to push $CHART_NAME-$CHART_VERSION to GHCR"
              cat ${CHART_NAME}-ghcr-output.log
              exit 1
            fi

            cd ${{ github.workspace }}
          done
          echo "released_charts=$RELEASED_CHARTS" >> "$GITHUB_OUTPUT"
